name: Autograding Tests
'on':
  - push
  - workflow_dispatch
  - repository_dispatch

permissions:
  checks: read
  actions: write # upload artifact
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Pull Docker Image
      run: docker pull ghcr.io/kangwonlee/edu-base:0.2.4 # Pull your Docker image

    - name: Set report file names
      id: json
      run: |
        echo "syntax=report_syntax.json" >> $GITHUB_OUTPUT
        echo "style=report_style.json" >> $GITHUB_OUTPUT
        echo "results=report_results.json" >> $GITHUB_OUTPUT

    - name: check syntax
      id: check-syntax
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: check syntax
        setup-command: "docker run --rm --user 1001:1001 -v $(pwd):/app ghcr.io/kangwonlee/edu-base:0.2.4 python3 -m pip list" # Run setup in container
        command: "docker run --rm --user 1001:1001 -v $(pwd):/app ghcr.io/kangwonlee/edu-base:0.2.4 python3 -m pytest --json-report --json-report-indent=4 --json-report-file=/app/${{ steps.json.outputs.syntax }} tests/test_syntax.py" # Run test in container
        timeout: 1
        max-score: 1

    - name: check style
      id: check-style
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: check style
        setup-command: "docker run --rm --user 1001:1001 -v $(pwd):/app ghcr.io/kangwonlee/edu-base:0.2.4 python3 -m pip list" # Run setup in container
        command: "docker run --rm --user 1001:1001 -v $(pwd):/app ghcr.io/kangwonlee/edu-base:0.2.4 python3 -m pytest --json-report --json-report-indent=4 --json-report-file=/app/${{ steps.json.outputs.style }} tests/test_style.py" # Run test in container
        timeout: 1
        max-score: 1

    - name: test results
      id: test-results
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: test results
        setup-command: "docker run --rm --user 1001:1001 -v $(pwd):/app ghcr.io/kangwonlee/edu-base:0.2.4 python3 -m pip list" # Run setup in container
        command: "docker run --rm --user 1001:1001 -v $(pwd):/app ghcr.io/kangwonlee/edu-base:0.2.4 python3 -m pytest -n auto --json-report --json-report-indent=4 --json-report-file=/app/${{ steps.json.outputs.results }} tests/test_results.py" # Run test in container
        timeout: 2
        max-score: 3

    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        CHECK-SYNTAX_RESULTS: "${{steps.check-syntax.outputs.result}}"
        CHECK-STYLE_RESULTS: "${{steps.check-style.outputs.result}}"
        TEST-RESULTS_RESULTS: "${{steps.test-results.outputs.result}}"
      with:
        runners: check-syntax,check-style,test-results

    - name: AI Tutor
      id: ai-tutor
      if: always()
      run: |
        docker run --rm --user 1001:1001 -v $(pwd):/app/workspace \
            --env INPUT_REPORT-FILES="workspace/${{ steps.json.outputs.results }},workspace/${{ steps.json.outputs.syntax }},workspace/${{ steps.json.outputs.style }}" \
            --env INPUT_STUDENT-FILES="workspace/exercise.py" \
            --env INPUT_README-PATH="workspace/README.md" \
            --env INPUT_API-KEY="${{ secrets.GOOGLE_API_KEY }}" \
            --env INPUT_EXPLANATION-IN="Korean" \
            ghcr.io/kangwonlee/edu-base:0.2.4 \
            python3 ai_tutor/entrypoint.py
      timeout-minutes: 2

    - name: upload artifacts
      id: artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: artifacts
        path: |
          ./*.png
          ./*.json
        retention-days: 21
        overwrite: true
